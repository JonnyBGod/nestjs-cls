"use strict";(self.webpackChunknestjs_cls=self.webpackChunknestjs_cls||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"documentationSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Installation","href":"/nestjs-cls/introduction/installation","docId":"introduction/installation"},{"type":"link","label":"Quick Start","href":"/nestjs-cls/introduction/quick-start","docId":"introduction/quick-start"},{"type":"link","label":"How it works","href":"/nestjs-cls/introduction/how-it-works","docId":"introduction/how-it-works"}],"href":"/nestjs-cls/"}]},"docs":{"introduction/how-it-works":{"id":"introduction/how-it-works","title":"How it works","description":"Continuation-local storage provides a common space for storing and retrieving data throughout the life of a function/callback call chain. In NestJS, this allows for sharing request data across the lifetime of a single request - without the need for request-scoped providers. It also makes it easy to track and log request ids throughout the whole application.","sidebar":"documentationSidebar"},"introduction/index":{"id":"introduction/index","title":"Introduction","description":"A continuation-local\\\\* storage module compatible with NestJS\' dependency injection based on Node\'s AsyncLocalStorage.","sidebar":"documentationSidebar"},"introduction/installation":{"id":"introduction/installation","title":"Installation","description":"Install as any other NPM package using your favorite package manager.","sidebar":"documentationSidebar"},"introduction/quick-start":{"id":"introduction/quick-start","title":"Quick Start","description":"Below is an example of using this library to store the client\'s IP address in an interceptor and retrieving it in a service without explicitly passing it along.","sidebar":"documentationSidebar"}}}')}}]);
"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[823],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,c=d["".concat(l,".").concat(u)]||d[u]||k[u]||o;return n?a.createElement(c,i(i({ref:t},m),{},{components:n})):a.createElement(c,i({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},i="Module Options",p={unversionedId:"api/module-options",id:"api/module-options",title:"Module Options",description:"forRoot(Async)",source:"@site/docs/04_api/02_module-options.md",sourceDirName:"04_api",slug:"/api/module-options",permalink:"/nestjs-cls/api/module-options",draft:!1,editUrl:"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/04_api/02_module-options.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Service Interface",permalink:"/nestjs-cls/api/service-interface"},next:{title:"Considerations",permalink:"/nestjs-cls/considerations/"}},l={},s=[{value:"forRoot(Async)",id:"forrootasync",level:2},{value:"forFeature(Async)",id:"forfeatureasync",level:2},{value:"Middleware &amp; Enhancer options",id:"middleware--enhancer-options",level:2}],m={toc:s},d="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"module-options"},"Module Options"),(0,r.kt)("h2",{id:"forrootasync"},"forRoot(Async)"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModule.forRoot()")," method takes the following ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"ClsModuleOptions")),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"middleware?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"ClsMiddlewareOptions")),(0,r.kt)("br",{parentName:"p"}),"\n","An object with additional options for the ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsMiddleware"),", see ",(0,r.kt)("a",{parentName:"p",href:"#middleware--enhancer-options"},"below"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"guard?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"ClsGuardOptions")),(0,r.kt)("br",{parentName:"p"}),"\n","An object with additional options for the ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsGuard"),", see ",(0,r.kt)("a",{parentName:"p",href:"#middleware--enhancer-options"},"below"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"interceptor?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"ClsInterceptorOptions")),(0,r.kt)("br",{parentName:"p"}),"\n","An object with additional options for the ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsInterceptor"),", see ",(0,r.kt)("a",{parentName:"p",href:"#middleware--enhancer-options"},"below"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"global?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"))," (default ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"false")),")",(0,r.kt)("br",{parentName:"p"}),"\n","Whether to make the module global, so you do not have to import ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModule.forFeature()")," in other modules.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"proxyProviders?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"Type[]")),(0,r.kt)("br",{parentName:"p"}),"\n","Array of ",(0,r.kt)("a",{parentName:"p",href:"/nestjs-cls/features-and-use-cases/proxy-providers"},"Proxy Providers")," that should be registered in the root module. Currently only accepts sync class Proxy providers, use ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModule.forFeatureAsync()")," for more complex use-cases."))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ClsModule.forRootAsync()")," is also available. You can supply the usual ",(0,r.kt)("inlineCode",{parentName:"p"},"imports"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"inject")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"useFactory")," parameters as usual."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Please note"),": If you intend to use multiple enhancers at the same time (e.g. initialize the CLS context in a middleware and then set some CLS variables additional CLS variables in an interceptor), be aware that the only the first one in the chain will set the Request ID.")),(0,r.kt)("h2",{id:"forfeatureasync"},"forFeature(Async)"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModule.forFeature()")," method can be used to register a ",(0,r.kt)("a",{parentName:"p",href:"/nestjs-cls/features-and-use-cases/proxy-providers"},"Proxy Providers"),". The Sync method only accepts Class Proxy providers."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModule.forFeatureAsync()")," method accepts either ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModuleProxyClassProviderOptions")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModuleProxyFactoryProviderOptions")," that both accept these options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"provide?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"any")),(0,r.kt)("br",{parentName:"p"}),"\n","Custom injection token to use for the provider. In case of a class provider, this parameter is optional, as the class reference passed to ",(0,r.kt)("inlineCode",{parentName:"p"},"useClass")," will be used by default.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"imports?"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"any[]")),(0,r.kt)("br",{parentName:"p"}),"\n","Optional list of imported modules that export the providers which are required for the provider.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"extraProviders?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"Provider[]")),"\nOptional list of additional providers that should be available to the Proxy. Useful for passing configuration from a parent dynamic module."))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModuleProxyClassProviderOptions")," interface further accepts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"useClass:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"Type")),(0,r.kt)("br",{parentName:"li"}),"The target class that will be used by this Proxy Provider. Make sure it is decorated with ",(0,r.kt)("inlineCode",{parentName:"li"},"@InjectableProxy"),".")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModuleProxyFactoryProviderOptions")," interface further accepts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"inject:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"any[]")),(0,r.kt)("br",{parentName:"p"}),"\n","An array of injection tokens for providers used in the ",(0,r.kt)("inlineCode",{parentName:"p"},"useFactory"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"useFactory:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"(...args: any[]) => any")),(0,r.kt)("br",{parentName:"p"}),"\n","Factory function that accepts an array of providers in the order of the according tokens in the ",(0,r.kt)("inlineCode",{parentName:"p"},"inject")," array. Returns (or resolves with) an object (or a function) that will be used by this Proxy Provider."))),(0,r.kt)("h2",{id:"middleware--enhancer-options"},"Middleware & Enhancer options"),(0,r.kt)("p",null,"All of the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Cls{Middleware,Guard,Interceptor}Options"))," take the following parameters (either in ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsModuleOptions")," or directly when instantiating them manually):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"mount?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"))," (default ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"false")),")",(0,r.kt)("br",{parentName:"p"}),"\n","Whether to automatically mount the middleware/guard/interceptor to every route (not applicable when instantiating them manually)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"generateId?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"))," (default ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"false")),")",(0,r.kt)("br",{parentName:"p"}),"\n","Whether to automatically generate a request ID. It will be available under the ",(0,r.kt)("inlineCode",{parentName:"p"},"CLS_ID")," key.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"idGenerator?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"(req: Request) => string | Promise<string>")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"idGenerator?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"(ctx: ExecutionContext) => string | Promise<string>")),(0,r.kt)("br",{parentName:"p"}),"\n","An optional function for generating the request ID. It takes the ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," object (or the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExecutionContext")," in case of a Guard or Interceptor) as an argument and (synchronously or asynchronously) returns a string. The default implementation uses ",(0,r.kt)("inlineCode",{parentName:"p"},"Math.random()")," to generate a string of 8 characters.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"setup?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"(cls: ClsService, req: Request) => void | Promise<void>;")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"setup?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"(cls: ClsService, ctx: ExecutionContext) => void | Promise<void>;")),(0,r.kt)("br",{parentName:"p"}),"\n","Function that executes after the CLS context had been initialised. It can be used to put additional variables in the CLS context.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"resolveProxyProviders?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"))," (default ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"true")),")",(0,r.kt)("br",{parentName:"p"}),"\n","Whether to automatically resolve Proxy Providers in the enhancer (if any are registered)."))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ClsMiddlewareOptions")," additionally takes the following parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"saveReq?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"))," (default ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"true")),")",(0,r.kt)("br",{parentName:"p"}),"\n","Whether to store the ",(0,r.kt)("em",{parentName:"p"},"Request")," object to the context. It will be available under the ",(0,r.kt)("inlineCode",{parentName:"p"},"CLS_REQ")," key.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"saveRes?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"))," (default ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"false")),")",(0,r.kt)("br",{parentName:"p"}),"\n","Whether to store the ",(0,r.kt)("em",{parentName:"p"},"Response")," object to the context. It will be available under the ",(0,r.kt)("inlineCode",{parentName:"p"},"CLS_RES")," key")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},(0,r.kt)("inlineCode",{parentName:"em"},"useEnterWith?:"))," ",(0,r.kt)("inlineCode",{parentName:"strong"},"boolean"))," (default ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"false")),")",(0,r.kt)("br",{parentName:"p"}),"\n","Set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," to set up the context using a call to ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/api/async_context.html#async_context_asynclocalstorage_enterwith_store"},(0,r.kt)("inlineCode",{parentName:"a"},"AsyncLocalStorage#enterWith"))," instead of wrapping the ",(0,r.kt)("inlineCode",{parentName:"p"},"next()")," call with the safer ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/api/async_context.html#async_context_asynclocalstorage_run_store_callback_args"},(0,r.kt)("inlineCode",{parentName:"a"},"AsyncLocalStorage#run")),". Most of the time this should not be necessary, but ",(0,r.kt)("a",{parentName:"p",href:"#graphql"},"some frameworks")," are known to lose the context with ",(0,r.kt)("inlineCode",{parentName:"p"},"run"),"."))))}k.isMDXComponent=!0}}]);
"use strict";(self.webpackChunknestjs_cls_docs=self.webpackChunknestjs_cls_docs||[]).push([[849],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||s;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8611:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={},o="Additional CLS Setup",i={unversionedId:"features-and-use-cases/additional-cls-setup",id:"features-and-use-cases/additional-cls-setup",title:"Additional CLS Setup",description:"The CLS middleware/guard/interceptor provide some default functionality, but sometimes you might want to store more contextual things in the CLS.",source:"@site/docs/03_features-and-use-cases/02_additional-cls-setup.md",sourceDirName:"03_features-and-use-cases",slug:"/features-and-use-cases/additional-cls-setup",permalink:"/nestjs-cls/features-and-use-cases/additional-cls-setup",draft:!1,editUrl:"https://github.com/Papooch/nestjs-cls/tree/main/docs/docs/03_features-and-use-cases/02_additional-cls-setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Request ID",permalink:"/nestjs-cls/features-and-use-cases/request-id"},next:{title:"Breaking out of DI",permalink:"/nestjs-cls/features-and-use-cases/breakin-out-of-di"}},c={},l=[{value:"Middleware",id:"middleware",level:2},{value:"Enhancers",id:"enhancers",level:2}],u={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"additional-cls-setup"},"Additional CLS Setup"),(0,a.kt)("p",null,"The CLS middleware/guard/interceptor provide some default functionality, but sometimes you might want to store more contextual things in the CLS."),(0,a.kt)("p",null,"This can be of course done in a custom enhancer bound after, but for this scenario, the options expose a ",(0,a.kt)("inlineCode",{parentName:"p"},"setup")," function, which will be executed in the enhancer right after the CLS context is set up."),(0,a.kt)("p",null,"The function receives the ",(0,a.kt)("inlineCode",{parentName:"p"},"ClsService")," instance, and can be asynchronous."),(0,a.kt)("h2",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"In case of middleware the ",(0,a.kt)("inlineCode",{parentName:"p"},"Request")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Response")," objects are passed as the second and third parameters."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"ClsModule.forRoot({\n    middleware: {\n        mount: true,\n        // highlight-start\n        setup: (cls, req: Request, res: Response) => {\n            cls.set('TENANT_ID', req.params('tenant_id'));\n            cls.set('AUTH', { authenticated: false });\n        },\n        // highlight-end\n    },\n});\n")),(0,a.kt)("h2",{id:"enhancers"},"Enhancers"),(0,a.kt)("p",null,"In a guard or interceptor, the ",(0,a.kt)("inlineCode",{parentName:"p"},"ExecutionContext")," object is passed as a second parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"ClsModule.forRoot({\n    interceptor: {\n        mount: true,\n        // highlight-start\n        setup: (cls, context) => {\n            const req = context.switchToHttp().getRequest<Request>();\n            cls.set('TENANT_ID', req.params('tenant_id'));\n            cls.set('AUTH', { authenticated: false });\n        },\n        // highlight-end\n    },\n});\n")))}p.isMDXComponent=!0}}]);
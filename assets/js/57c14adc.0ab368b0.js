"use strict";(self.webpackChunknestjs_cls=self.webpackChunknestjs_cls||[]).push([[507],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={},s="Security",i={unversionedId:"considerations/security",id:"considerations/security",title:"Security",description:"It is often discussed whether AsyncLocalStorage is safe to use for concurrent requests (because of a possible context leak) and whether the context could be lost_ throughout the duration of a request.",source:"@site/docs/05_considerations/01_security.md",sourceDirName:"05_considerations",slug:"/considerations/security",permalink:"/nestjs-cls/considerations/security",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05_considerations/01_security.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Considerations",permalink:"/nestjs-cls/considerations/"},next:{title:"Compatibility",permalink:"/nestjs-cls/considerations/compatibility"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"security"},"Security"),(0,o.kt)("p",null,"It is often discussed whether ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/api/async_context.html"},(0,o.kt)("inlineCode",{parentName:"a"},"AsyncLocalStorage"))," is safe to use for ",(0,o.kt)("em",{parentName:"p"},"concurrent requests")," (because of a possible context leak) and whether the context could be ",(0,o.kt)("em",{parentName:"p"},"lost")," throughout the duration of a request."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsMiddleware")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsInterceptor")," by default uses the safe ",(0,o.kt)("inlineCode",{parentName:"p"},"run()")," method, which it should not leak context, but in some rare cases, the context can be lost."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsGuard")," (and ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsMiddleware"),", if configured so) uses the less safe ",(0,o.kt)("inlineCode",{parentName:"p"},"enterWith()")," method, which might be needed in case the ",(0,o.kt)("inlineCode",{parentName:"p"},"run()")," method causes context loss."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This has a consequence that should be taken into account:")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"When the ",(0,o.kt)("inlineCode",{parentName:"p"},"enterWith")," method is used, any consequent requests ",(0,o.kt)("em",{parentName:"p"},"get access")," to the context of the previous one ",(0,o.kt)("em",{parentName:"p"},"until the request hits the ",(0,o.kt)("inlineCode",{parentName:"em"},"enterWith")," call"),".")),(0,o.kt)("p",null,"That means, when using ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsMiddleware")," with the ",(0,o.kt)("inlineCode",{parentName:"p"},"useEnterWith")," option, or ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsGuard")," to set up context, be sure to mount them as early in the request lifetime as possible and do not use any other enhancers that rely on ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsService")," before them. For ",(0,o.kt)("inlineCode",{parentName:"p"},"ClsGuard"),", that means you should probably manually mount it in ",(0,o.kt)("inlineCode",{parentName:"p"},"AppModule")," if you require any other guard to run ",(0,o.kt)("em",{parentName:"p"},"after")," it."),(0,o.kt)("p",null,"The next chapter addresses compatibility with various transport protocols."))}d.isMDXComponent=!0}}]);